FILE(GLOB_RECURSE project_SRCS
  *.cpp *.cxx *.cc *.C *.c *.h *.hpp)

# Remove platform or config specific files from build
LIST(REMOVE_ITEM project_SRCS
  ${CMAKE_CURRENT_SOURCE_DIR}/dllmain.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/stdafx.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/targetver.h
  ${CMAKE_CURRENT_SOURCE_DIR}/stdafx.h)

SET(project_LIBS ${Boost_LIBRARIES})

# Output base name
SET(project_BIN ${LIBPARSER_NAME})

IF (project_build_static)
  ADD_LIBRARY(${LIBPARSER_NAME_STATIC} STATIC ${project_SRCS})

  TARGET_LINK_LIBRARIES(${LIBPARSER_NAME_STATIC} ${project_LIBS})

  IF(${CMAKE_SYSTEM_NAME} STREQUAL "Linux")
    SET_TARGET_PROPERTIES(${LIBPARSER_NAME_STATIC} PROPERTIES
      VERSION "${APPLICATION_VERSION_MAJOR}.${APPLICATION_VERSION_MINOR}"
      OUTPUT_NAME "${project_BIN}"
      CLEAN_DIRECT_OUTPUT 1)
  ELSE()
    SET_TARGET_PROPERTIES(${LIBPARSER_NAME_STATIC} PROPERTIES
      VERSION "${APPLICATION_VERSION_MAJOR}.${APPLICATION_VERSION_MINOR}"
      OUTPUT_NAME "${project_BIN}"
      CLEAN_DIRECT_OUTPUT 1
      PREFIX "")
  ENDIF()

  INSTALL(TARGETS ${LIBPARSER_NAME_STATIC} DESTINATION ${LIBRARY_INSTALL_PATH})
ENDIF()

IF (project_build_shared)
  ADD_LIBRARY(${LIBPARSER_NAME_SHARED} SHARED ${project_SRCS})

  TARGET_LINK_LIBRARIES(${LIBPARSER_NAME_SHARED} ${project_LIBS})

  IF(${CMAKE_SYSTEM_NAME} STREQUAL "Linux")
    SET_TARGET_PROPERTIES(${LIBPARSER_NAME_SHARED} PROPERTIES
      VERSION "${APPLICATION_VERSION_MAJOR}.${APPLICATION_VERSION_MINOR}"
      OUTPUT_NAME "${project_BIN}"
      CLEAN_DIRECT_OUTPUT 1)
  ELSE()
    SET_TARGET_PROPERTIES(${LIBPARSER_NAME_SHARED} PROPERTIES
      VERSION "${APPLICATION_VERSION_MAJOR}.${APPLICATION_VERSION_MINOR}"
      OUTPUT_NAME "${project_BIN}"
      CLEAN_DIRECT_OUTPUT 1
      PREFIX "")
  ENDIF()

  INSTALL(TARGETS ${LIBPARSER_NAME_SHARED} DESTINATION ${LIBRARY_INSTALL_PATH})
ENDIF()
